#!/usr/bin/ruby

ActiveRecord::Base.logger = Logger.new STDOUT
ActionController::Base.logger = Logger.new STDOUT

module Selector
  extend self

  def find(klass, options={})
    limit = options[:limit] || 1
    after = options[:after] || 0

    matches = []

    begin
      record = klass.where("id > ?", after).first
      after = record.try(:id)

      matches << record if yield record
    end while record && matches.size < limit

    return limit == 1 ? matches.first : matches
  end

  def random_ids(klass, options={})
    size = options[:size] || 100

    ids = []
    count = klass.count
    runs = 0

    while ids.length < size
      begin
        rand_id = rand(count)
        rand_id += (count / 2) if runs == size # check the higher end of the database if we're not done
        id = klass.where("id >= ?", rand_id).first.id
      end while ids.include? instance.id

      ids << id
      runs += 1
    end

    ids
  end
end
